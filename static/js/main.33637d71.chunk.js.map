{"version":3,"sources":["Home.js","Services.js","Clients.js","Contact.js","About.js","App.js","serviceWorker.js","index.js"],"names":["Home","Services","Clients","Contact","About","Button","props","state","Num","ButtonNum","Class","this","value","to","ButtonName","className","onClick","React","Component","Page","ActiveTab","Tabs","setState","num","isActive","console","log","handleClick","renderPageTop","renderButton","renderPageFooter","Contents","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yRAYmBA,EAVN,kBACT,6BACI,wHAA6F,8BAC7F,sIAGA,8BCcWC,EApBF,kBACb,6BACI,6BADJ,iIAEkI,6BAAS,6BACvI,2BACI,8CACA,uDACA,+CACA,gDACA,uDACA,kEACA,mDACA,6CACA,gDACA,kECLOC,EATH,kBACZ,+dCQeC,EATH,kBACZ,+dCUeC,EAXL,kBACV,+dCgBEC,G,wDACL,WAAYC,GACX,IAAD,8BACC,cAAMA,IACDC,MACL,CACCC,IAAM,EAAKF,MAAMG,WAJnB,E,qDAUC,IACIC,EADL,OAGC,OADyBA,EAAL,IAAnBC,KAAKL,MAAMM,MAAqB,eAAyB,SAEzD,6BACA,kBAAC,IAAD,CAAMC,GAAIF,KAAKL,MAAMQ,WACrBC,UAAaL,EACbM,QAAS,kBAAM,EAAKV,MAAMU,YAF1B,IAEwCL,KAAKL,MAAMQ,WACnD,+BAAa,+BAAa,+BAAa,qC,GApBrBG,IAAMC,YA4BrBC,E,kDAEL,WAAYb,GACX,IAAD,8BACC,cAAMA,IACDC,MACL,CACCa,UAAW,EACXC,KAAM,CAAC,OAAQ,WAAY,UAAW,UAAW,UALnD,E,4DAUC,OACC,4BAAQN,UAAU,cAAlB,e,yCAQA,OACC,4BAAQA,UAAU,UAAlB,8B,kCAMWN,GACXE,KAAKW,SAAS,CAACF,UAAWX,M,mCAGdc,GAAM,IAEdC,EAFa,OAOjB,OANAC,QAAQC,IAAI,qBAAqBH,GAEjCC,EAAW,EACoBA,EAA9Bb,KAAKJ,MAAMa,YAAYG,EAAkB,EAAe,EACzDE,QAAQC,IAAI,WAAWH,EAAK,KAAM,GAGjC,kBAAC,EAAD,CACAX,MAAOY,EACPV,WAAYH,KAAKJ,MAAMc,KAAKE,GAC5Bd,UAAWc,EACXP,QAAS,kBAAM,EAAKW,YAAYJ,Q,+BAMhC,OACC,6BACCZ,KAAKiB,gBACN,yBAAKb,UAAU,UACdJ,KAAKkB,aAAa,GAAIlB,KAAKkB,aAAa,GAAIlB,KAAKkB,aAAa,GAAIlB,KAAKkB,aAAa,GAAIlB,KAAKkB,aAAa,GAC1GlB,KAAKmB,yB,GAxDOb,IAAMC,WA+DnBa,EAAW,kBAChB,8BACA,kBAAC,IAAD,KAEA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlC,IACjC,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,QAAQC,UAAWlC,IACrC,kBAAC,IAAD,CAAOiC,KAAK,YAAYC,UAAWjC,IACnC,kBAAC,IAAD,CAAOgC,KAAK,WAAWC,UAAWhC,IAClC,kBAAC,IAAD,CAAO+B,KAAK,WAAWC,UAAW/B,IAClC,kBAAC,IAAD,CAAO8B,KAAK,SAASC,UAAW9B,OAcjB+B,MAThB,WACC,OACC,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCpHkBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5B,QAAQ4B,MAAMA,EAAMC,c","file":"static/js/main.33637d71.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => (\n    <div>\n        <p>Teknologic is an engineering and technology development studio where dreams become tech.  <br></br></p>\n        <p> We empower large enterprise, small start ups, or even individual artists with our expertise and skills</p>\n\n\n        <p></p>\n    </div>\n    )\n\n    export default Home;","import React from 'react';\n\nconst Services = () => (\n    <div>\n        <br></br>\n        Our design house can work in form of Consultancy, ODM, turn-key OEM, or as an oursourcing agent to fit you with right people. <br></br><br></br>\n        <p>\n            <li>Product design</li>\n            <li>Signal processing (DSP)</li>\n            <li>Embedded design</li>\n            <li>Algorithm design</li>\n            <li>Machine learning and AI</li>\n            <li>Electronics design and PCB layouts</li>\n            <li>Mesh network design</li>\n            <li>Data Analysis</li>\n            <li>Wireless systems</li>\n            <li>Engineering Audit and Expertise</li>\n            </p>\n\n    </div>\n    )\n\n    export default Services;","import React from 'react';\n\nconst Clients = () => (\n    <div>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    </div>\n    )\n\n    export default Clients;","import React from 'react';\n\nconst Contact = () => (\n    <div>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    </div>\n    )\n\n    export default Contact;","import React from 'react';\n\nconst About = () => (\n    <div>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n\n    </div>\n    )\n\n    export default About;","import React from 'react';\n// import Button from '@material-ui/core/Button';\n// import Switch from '@material-ui/core/Switch';\n// import logo from './logo.svg';\nimport {\n\tSwitch,\n\tRoute,\n\tLink\n} from 'react-router-dom';\nimport Home from './Home.js'\nimport Services from './Services.js'\nimport Clients from './Clients.js'\nimport Contact from './Contact.js'\nimport About from './About.js'\nimport './App.css';\n\n\n\n\nclass Button extends React.Component {\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state =\n\t\t{\n\t\t\tNum : this.props.ButtonNum,\n\t\t\t// Active: true\n\t\t};\n\t}\n\n\trender()\n\t{\n\t\tlet Class\n\t\t(this.props.value===1) ? Class = \"ButtonActive\" : Class = \"Button\";\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Link to={this.props.ButtonName}\n\t\t\tclassName = {Class}\n\t\t\tonClick={() => this.props.onClick()} > {this.props.ButtonName}\n\t\t\t<span></span><span></span><span></span><span></span>\n\t\t\t</Link>\n\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\nclass Page extends React.Component {\n\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state =\n\t\t{\n\t\t\tActiveTab: 0,\n\t\t\tTabs: [\"Home\", \"Services\", \"Clients\", \"Contact\", \"About\"]\n\t\t};\n\t}\n\n\trenderPageTop(){\n\t\treturn (\n\t\t\t<header className=\"App-header\">\n\t\t\tlogo here\n\t\t\t</header>\n\t\t\t)\n\t\t}\n\n\t\trenderPageFooter()\n\t\t{\n\t\t\treturn (\n\t\t\t\t<footer className=\"footer\">\n\t\t\t\tSIA TeknoLogic &copy; 2020\n\t\t\t\t</footer>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\thandleClick(ButtonNum) {\n\t\t\t\tthis.setState({ActiveTab: ButtonNum});\n\t\t\t}\n\n\t\t\trenderButton(num) {\n\t\t\t\tconsole.log(\"Rendering button #\",num)\n\t\t\t\tlet isActive\n\t\t\t\tisActive = 0;\n\t\t\t\t(this.state.ActiveTab===num) ? isActive = 1 : isActive = 0;\n\t\t\t\tconsole.log(\"Button #\",num, \"is\", 0)\n\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\tvalue={isActive}\n\t\t\t\t\tButtonName={this.state.Tabs[num]}\n\t\t\t\t\tButtonNum={num}\n\t\t\t\t\tonClick={() => this.handleClick(num)}\n\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\trender() {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.renderPageTop()}\n\t\t\t\t\t\t<div className=\"topnav\">\n\t\t\t\t\t\t{this.renderButton(0)}{this.renderButton(1)}{this.renderButton(2)}{this.renderButton(3)}{this.renderButton(4)}\n\t\t\t\t\t\t{this.renderPageFooter()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\nconst Contents = () => (\n\t<main>\n\t<Switch>\n\n\t<Route exact path='/' component={Home}/>\n\t<Route exact path='/Home' component={Home}/>\n\t<Route path='/Services' component={Services}/>\n\t<Route path='/Clients' component={Clients}/>\n\t<Route path='/Contact' component={Contact}/>\n\t<Route path='/About' component={About}/>\n\t</Switch>\n\t</main>\n\t)\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t<Page />\n\t\t<Contents />\n\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {HashRouter} from'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}